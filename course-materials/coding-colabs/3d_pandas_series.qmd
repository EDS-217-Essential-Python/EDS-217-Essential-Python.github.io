---
title: "Day 3: ðŸ™Œ Coding Colab"
subtitle: "Working with Series"
---

## Introduction

In this collaborative coding exercise, we'll explore Pandas Series, a fundamental data structure in the Pandas library. You'll work together to create, manipulate, and analyze Series objects.

## Resources

Here's our course cheatsheet on pandas `Series`:

- [Pandas Series Cheatsheet](../cheatsheets/pandas_series.qmd)

Feel free to refer to this cheatsheet throughout the exercise if you need a quick reminder about syntax or functionality.

## Setup

First, let's import the necessary libraries and create a sample Series.

```{python}
import pandas as pd
import numpy as np

# Create a sample Series
fruits = pd.Series(['apple', 'banana', 'cherry', 'date', 'elderberry'], name='Fruits')
print(fruits)
```

## Exercise 1: Creating a Series

Work together to create a Series representing the prices of the fruits in our `fruits` Series.

```{python}
#| echo: false
#| include: false

# Instructor's sample solution
prices = pd.Series([0.5, 0.3, 1.0, 1.5, 2.0], index=fruits.values, name='Prices')
print(prices)
```

```{python}
# Your code here
# Create a Series called 'prices' with the same index as 'fruits'
# Use these prices: apple: $0.5, banana: $0.3, cherry: $1.0, date: $1.5, elderberry: $2.0

```

## Exercise 2: Series Operations

Collaborate to perform the following operations:

1. Calculate the total price of all fruits.
2. Find the most expensive fruit.
3. Apply a 10% discount to all fruits priced over $1.0.

```{python}
#| echo: false
#| include: false

# Instructor's sample solution
total_price = prices.sum()
most_expensive = prices.idxmax()
discounted_prices = prices.where(prices <= 1.0, prices * 0.9)

print(f"Total price: ${total_price:.2f}")
print(f"Most expensive fruit: {most_expensive}")
print("\nDiscounted prices:")
print(discounted_prices)
```

```{python}
# Your code here
# 1. Calculate the total price of all fruits
# 2. Find the most expensive fruit
# 3. Apply a 10% discount to all fruits priced over $1.0

```

## Exercise 3: Series Analysis

Work as a team to answer the following questions:

1. What is the average price of the fruits?
2. How many fruits cost less than $1.0?
3. What is the price range (difference between max and min prices)?

```{python}
#| echo: false
#| include: false

# Instructor's sample solution
average_price = prices.mean()
cheap_fruits = prices[prices < 1.0].count()
price_range = prices.max() - prices.min()

print(f"Average price: ${average_price:.2f}")
print(f"Number of fruits under $1.0: {cheap_fruits}")
print(f"Price range: ${price_range:.2f}")
```

```{python}
# Your code here
# 1. Calculate the average price of the fruits
# 2. Count how many fruits cost less than $1.0
# 3. Calculate the price range (difference between max and min prices)

```

## Exercise 4: Series Manipulation

Collaborate to perform these manipulations on the `fruits` and `prices` Series:

1. Add a new fruit 'fig' with a price of $1.2 to both Series using pd.concat
2. Remove 'banana' from both Series.
3. Sort both Series by fruit name (alphabetically).

```{python}
#| echo: false
#| include: false

# Instructor's sample solution
# Add 'fig'
fruits = pd.concat([fruits, pd.Series(['fig'], name='Fruits')])
prices = pd.concat([prices, pd.Series([1.2], index=['fig'], name='Prices')])

# Remove 'banana'
fruits = fruits[fruits != 'banana']
prices = prices.drop('banana')

# Sort both Series
fruits = fruits.sort_values()
prices = prices.reindex(fruits.index)

print("Updated fruits Series:")
print(fruits)
print("\nUpdated prices Series:")
print(prices)
```

```{python}
# Your code here
# 1. Add 'fig' to both Series (price: $1.2)
# 2. Remove 'banana' from both Series
# 3. Sort both Series alphabetically by fruit name

```

## Conclusion

In this collaborative exercise, you've practiced creating, manipulating, and analyzing Pandas Series. You've learned how to perform basic operations, apply conditions, and modify Series objects. These skills will be valuable as you work with more complex datasets in the future.

## Discussion Questions

1. What advantages does using a Pandas Series offer compared to using a Python list or dictionary?
2. Can you think of a real-world scenario where you might use a Pandas Series instead of a DataFrame?
3. What challenges did you face while working with Series in this exercise, and how did you overcome them?

Discuss these questions with your team and share your insights.

::: {.center-text .body-text-xl .teal-text}
End Coding Colab Session (Day 4)
:::

