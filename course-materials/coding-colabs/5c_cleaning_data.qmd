---
title: "Day 5: ðŸ™Œ Coding Colab"
subtitle: "Cleaning Pandas"
---

## Introduction

In this collaborative coding exercise, you will work together and apply your new data cleaning skills to a simple dataframe that has a suprising number of problems. 

## Resources

Here's our course cheatsheet on cleaning data:

- [Pandas Cleaning Cheatsheet](../cheatsheets/data_cleaning.qmd)

Feel free to refer to this cheatsheet throughout the exercise if you need a quick reminder about syntax or functionality.

## Setup

First, let's import the necessary libraries and load an example messy dataframe.

```{python}
import pandas as pd
import numpy as np

url = 'https://bit.ly/messy_csv'
messy_df = pd.read_csv(url)
print(messy_df.dtypes)
```


## Practical Exercise: Cleaning a Messy Environmental Dataset

Let's apply what we've learned so far to clean the messy environmental dataset. 

Your task is to clean this dataframe by

1. Removing duplicates
2. Handling missing values (either fill or dropna to remove rows with missing data)
3. Ensuring consistent data types (dates, strings)
4. Formatting the 'site' column for consistency
5. Making sure all column names are lower case, without whitespace.

Try to implement these steps using the techniques we've learned.

```{python}
#| echo: false
#| include: false

messy_df.drop_duplicates(inplace=True)
messy_df['site'] = messy_df['site'].str.lower().replace('sitec','site_c')
messy_df.rename(columns={'collection date': 'collection_date'}, inplace=True)
messy_df['collection_date'] = pd.to_datetime(messy_df['collection_date'])

messy_df['site'] = messy_df['site'].astype('string')

cleaned_df = messy_df.dropna()

print("Cleaned DataFrame:")
print(cleaned_df)

print("\nCleaned dtypes:")
print(cleaned_df.dtypes)
```

course-materials/coding-colabs/4c_pandas_dataframes.qmd
::: {.center-text .body-text-xl .teal-text}
End Coding Colab Session (Day 4)
:::

